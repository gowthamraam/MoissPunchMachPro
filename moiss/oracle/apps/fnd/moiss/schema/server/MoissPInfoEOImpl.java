package moiss.oracle.apps.fnd.moiss.schema.server;

import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MoissPInfoEOImpl extends OAEntityImpl {
    public static final int PUNCHCODE = 0;
    public static final int EMPLOYEENUMBER = 1;
    public static final int EMPLOYEENAME = 2;
    public static final int PUNCHDATE = 3;
    public static final int STATE = 4;
    public static final int NEWSTATE = 5;
    public static final int EXCEPTION = 6;
    public static final int DEPARTMENT = 7;
    public static final int MANENTRYYN = 8;
    public static final int REMARKS = 9;
    public static final int ATTRIBUTECATEGORY = 10;
    public static final int ATTRIBUTE1 = 11;
    public static final int ATTRIBUTE2 = 12;
    public static final int ATTRIBUTE3 = 13;
    public static final int ATTRIBUTE4 = 14;
    public static final int ATTRIBUTE5 = 15;
    public static final int ATTRIBUTE6 = 16;
    public static final int ATTRIBUTE7 = 17;
    public static final int ATTRIBUTE8 = 18;
    public static final int ATTRIBUTE9 = 19;
    public static final int ATTRIBUTE10 = 20;
    public static final int CREATEDBY = 21;
    public static final int CREATIONDATE = 22;
    public static final int LASTUPDATEDBY = 23;
    public static final int LASTUPDATEDATE = 24;
    public static final int LASTUPDATELOGIN = 25;
    public static final int PUNCHINFOID = 26;

    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public MoissPInfoEOImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("moiss.oracle.apps.fnd.moiss.schema.server.MoissPInfoEO");
        }
        return mDefinitionObject;
    }

    /**Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**Add Entity validation code in this method.
     */
    protected void validateEntity() {
        super.validateEntity();
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**Gets the attribute value for PunchCode, using the alias name PunchCode
     */
    public String getPunchCode() {
        return (String)getAttributeInternal(PUNCHCODE);
    }

    /**Sets <code>value</code> as the attribute value for PunchCode
     */
    public void setPunchCode(String value) {
        setAttributeInternal(PUNCHCODE, value);
    }

    /**Gets the attribute value for EmployeeNumber, using the alias name EmployeeNumber
     */
    public Number getEmployeeNumber() {
        return (Number)getAttributeInternal(EMPLOYEENUMBER);
    }

    /**Sets <code>value</code> as the attribute value for EmployeeNumber
     */
    public void setEmployeeNumber(Number value) {
        setAttributeInternal(EMPLOYEENUMBER, value);
    }

    /**Gets the attribute value for EmployeeName, using the alias name EmployeeName
     */
    public String getEmployeeName() {
        return (String)getAttributeInternal(EMPLOYEENAME);
    }

    /**Sets <code>value</code> as the attribute value for EmployeeName
     */
    public void setEmployeeName(String value) {
        setAttributeInternal(EMPLOYEENAME, value);
    }

    /**Gets the attribute value for PunchDate, using the alias name PunchDate
     */
    public String getPunchDate() {
        return (String)getAttributeInternal(PUNCHDATE);
    }

    /**Sets <code>value</code> as the attribute value for PunchDate
     */
    public void setPunchDate(String value) {
        setAttributeInternal(PUNCHDATE, value);
    }

    /**Gets the attribute value for State, using the alias name State
     */
    public String getState() {
        return (String)getAttributeInternal(STATE);
    }

    /**Sets <code>value</code> as the attribute value for State
     */
    public void setState(String value) {
        setAttributeInternal(STATE, value);
    }

    /**Gets the attribute value for NewState, using the alias name NewState
     */
    public String getNewState() {
        return (String)getAttributeInternal(NEWSTATE);
    }

    /**Sets <code>value</code> as the attribute value for NewState
     */
    public void setNewState(String value) {
        setAttributeInternal(NEWSTATE, value);
    }

    /**Gets the attribute value for Exception, using the alias name Exception
     */
    public String getException() {
        return (String)getAttributeInternal(EXCEPTION);
    }

    /**Sets <code>value</code> as the attribute value for Exception
     */
    public void setException(String value) {
        setAttributeInternal(EXCEPTION, value);
    }

    /**Gets the attribute value for Department, using the alias name Department
     */
    public String getDepartment() {
        return (String)getAttributeInternal(DEPARTMENT);
    }

    /**Sets <code>value</code> as the attribute value for Department
     */
    public void setDepartment(String value) {
        setAttributeInternal(DEPARTMENT, value);
    }

    /**Gets the attribute value for ManEntryYn, using the alias name ManEntryYn
     */
    public String getManEntryYn() {
        return (String)getAttributeInternal(MANENTRYYN);
    }

    /**Sets <code>value</code> as the attribute value for ManEntryYn
     */
    public void setManEntryYn(String value) {
        setAttributeInternal(MANENTRYYN, value);
    }

    /**Gets the attribute value for Remarks, using the alias name Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**Sets <code>value</code> as the attribute value for Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**Gets the attribute value for AttributeCategory, using the alias name AttributeCategory
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**Sets <code>value</code> as the attribute value for AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for Attribute6, using the alias name Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**Sets <code>value</code> as the attribute value for Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**Gets the attribute value for Attribute7, using the alias name Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**Sets <code>value</code> as the attribute value for Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**Gets the attribute value for Attribute8, using the alias name Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**Sets <code>value</code> as the attribute value for Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**Gets the attribute value for Attribute9, using the alias name Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**Sets <code>value</code> as the attribute value for Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**Gets the attribute value for Attribute10, using the alias name Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**Sets <code>value</code> as the attribute value for Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for PunchInfoId, using the alias name PunchInfoId
     */
    public Number getPunchInfoId() {
        return (Number)getAttributeInternal(PUNCHINFOID);
    }

    /**Sets <code>value</code> as the attribute value for PunchInfoId
     */
    public void setPunchInfoId(Number value) {
        setAttributeInternal(PUNCHINFOID, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PUNCHCODE:
            return getPunchCode();
        case EMPLOYEENUMBER:
            return getEmployeeNumber();
        case EMPLOYEENAME:
            return getEmployeeName();
        case PUNCHDATE:
            return getPunchDate();
        case STATE:
            return getState();
        case NEWSTATE:
            return getNewState();
        case EXCEPTION:
            return getException();
        case DEPARTMENT:
            return getDepartment();
        case MANENTRYYN:
            return getManEntryYn();
        case REMARKS:
            return getRemarks();
        case ATTRIBUTECATEGORY:
            return getAttributeCategory();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case ATTRIBUTE6:
            return getAttribute6();
        case ATTRIBUTE7:
            return getAttribute7();
        case ATTRIBUTE8:
            return getAttribute8();
        case ATTRIBUTE9:
            return getAttribute9();
        case ATTRIBUTE10:
            return getAttribute10();
        case CREATEDBY:
            return getCreatedBy();
        case CREATIONDATE:
            return getCreationDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case PUNCHINFOID:
            return getPunchInfoId();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PUNCHCODE:
            setPunchCode((String)value);
            return;
        case EMPLOYEENUMBER:
            setEmployeeNumber((Number)value);
            return;
        case EMPLOYEENAME:
            setEmployeeName((String)value);
            return;
        case PUNCHDATE:
            setPunchDate((String)value);
            return;
        case STATE:
            setState((String)value);
            return;
        case NEWSTATE:
            setNewState((String)value);
            return;
        case EXCEPTION:
            setException((String)value);
            return;
        case DEPARTMENT:
            setDepartment((String)value);
            return;
        case MANENTRYYN:
            setManEntryYn((String)value);
            return;
        case REMARKS:
            setRemarks((String)value);
            return;
        case ATTRIBUTECATEGORY:
            setAttributeCategory((String)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case ATTRIBUTE6:
            setAttribute6((String)value);
            return;
        case ATTRIBUTE7:
            setAttribute7((String)value);
            return;
        case ATTRIBUTE8:
            setAttribute8((String)value);
            return;
        case ATTRIBUTE9:
            setAttribute9((String)value);
            return;
        case ATTRIBUTE10:
            setAttribute10((String)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case PUNCHINFOID:
            setPunchInfoId((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number punchInfoId) {
        return new Key(new Object[]{punchInfoId});
    }
}
