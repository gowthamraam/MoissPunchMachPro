package moiss.oracle.apps.moiss.doclib.server;

import moiss.oracle.apps.moiss.doclib.schema.server.DocLibUserEOImpl;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.BFileDomain;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Char;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocIdUVORowImpl extends OAViewRowImpl {
    public static final int RN = 0;
    public static final int DOCUMENTNUMBER = 1;
    public static final int DOCID = 2;
    public static final int VERSIONNUMBER = 3;
    public static final int USERDOCID = 4;
    public static final int USERID = 5;
    public static final int READACCEPTFLAG = 6;
    public static final int DOCUMENTNAME = 7;
    public static final int OWNINGDEPTDESC = 8;
    public static final int CATEGORYDESC = 9;
    public static final int EFFECTIVESTARTDATE = 10;
    public static final int EFFECTIVEENDDATE = 11;
    public static final int DOCUMENTFILE = 12;
    public static final int MUSTREAD = 13;
    public static final int CHECKSWITCHER = 14;
    public static final int CATEGORY = 15;
    public static final int OWNINGDEPT = 16;
    public static final int DELETESWITCHER = 17;
    public static final int SELECTFLAG = 18;

    /**This is the default constructor (do not remove)
     */
    public DocIdUVORowImpl() {
    }

    /**Gets DocLibUserEO entity object.
     */
    public DocLibUserEOImpl getDocLibUserEO() {
        return (DocLibUserEOImpl)getEntity(0);
    }


    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case RN:
            return getRn();
        case DOCUMENTNUMBER:
            return getDocumentNumber();
        case DOCID:
            return getDocId();
        case VERSIONNUMBER:
            return getVersionNumber();
        case USERDOCID:
            return getUserDocId();
        case USERID:
            return getUserId();
        case READACCEPTFLAG:
            return getReadAcceptFlag();
        case DOCUMENTNAME:
            return getDocumentName();
        case OWNINGDEPTDESC:
            return getOwningDeptDesc();
        case CATEGORYDESC:
            return getCategoryDesc();
        case EFFECTIVESTARTDATE:
            return getEffectiveStartDate();
        case EFFECTIVEENDDATE:
            return getEffectiveEndDate();
        case DOCUMENTFILE:
            return getDocumentFile();
        case MUSTREAD:
            return getMustRead();
        case CHECKSWITCHER:
            return getCheckSwitcher();
        case CATEGORY:
            return getCategory();
        case OWNINGDEPT:
            return getOwningDept();
        case DELETESWITCHER:
            return getDeleteSwitcher();
        case SELECTFLAG:
            return getSelectFlag();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case RN:
            setRn((Number)value);
            return;
        case DOCUMENTNUMBER:
            setDocumentNumber((String)value);
            return;
        case DOCID:
            setDocId((Number)value);
            return;
        case VERSIONNUMBER:
            setVersionNumber((String)value);
            return;
        case USERDOCID:
            setUserDocId((Number)value);
            return;
        case USERID:
            setUserId((Number)value);
            return;
        case READACCEPTFLAG:
            setReadAcceptFlag((String)value);
            return;
        case DOCUMENTNAME:
            setDocumentName((String)value);
            return;
        case OWNINGDEPTDESC:
            setOwningDeptDesc((String)value);
            return;
        case CATEGORYDESC:
            setCategoryDesc((String)value);
            return;
        case EFFECTIVESTARTDATE:
            setEffectiveStartDate((Date)value);
            return;
        case EFFECTIVEENDDATE:
            setEffectiveEndDate((Date)value);
            return;
        case DOCUMENTFILE:
            setDocumentFile((BlobDomain)value);
            return;
        case MUSTREAD:
            setMustRead((String)value);
            return;
        case CHECKSWITCHER:
            setCheckSwitcher((String)value);
            return;
        case CATEGORY:
            setCategory((String)value);
            return;
        case OWNINGDEPT:
            setOwningDept((String)value);
            return;
        case DELETESWITCHER:
            setDeleteSwitcher((String)value);
            return;
        case SELECTFLAG:
            setSelectFlag((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }


    /**Gets the attribute value for the calculated attribute UserDocId
     */
    public Number getUserDocId() {
        return (Number) getAttributeInternal(USERDOCID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute UserDocId
     */
    public void setUserDocId(Number value) {
        setAttributeInternal(USERDOCID, value);
    }

    /**Gets the attribute value for the calculated attribute UserId
     */
    public Number getUserId() {
        return (Number) getAttributeInternal(USERID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute UserId
     */
    public void setUserId(Number value) {
        setAttributeInternal(USERID, value);
    }

    /**Gets the attribute value for the calculated attribute ReadAcceptFlag
     */
    public String getReadAcceptFlag() {
        return (String) getAttributeInternal(READACCEPTFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReadAcceptFlag
     */
    public void setReadAcceptFlag(String value) {
        setAttributeInternal(READACCEPTFLAG, value);
    }

    /**Gets the attribute value for the calculated attribute DocId
     */
    public Number getDocId() {
        return (Number) getAttributeInternal(DOCID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DocId
     */
    public void setDocId(Number value) {
        setAttributeInternal(DOCID, value);
    }

    /**Gets the attribute value for the calculated attribute DocumentName
     */
    public String getDocumentName() {
        return (String) getAttributeInternal(DOCUMENTNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DocumentName
     */
    public void setDocumentName(String value) {
        setAttributeInternal(DOCUMENTNAME, value);
    }

    /**Gets the attribute value for the calculated attribute OwningDeptDesc
     */
    public String getOwningDeptDesc() {
        return (String) getAttributeInternal(OWNINGDEPTDESC);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute OwningDeptDesc
     */
    public void setOwningDeptDesc(String value) {
        setAttributeInternal(OWNINGDEPTDESC, value);
    }

    /**Gets the attribute value for the calculated attribute CategoryDesc
     */
    public String getCategoryDesc() {
        return (String) getAttributeInternal(CATEGORYDESC);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CategoryDesc
     */
    public void setCategoryDesc(String value) {
        setAttributeInternal(CATEGORYDESC, value);
    }

    /**Gets the attribute value for the calculated attribute DocumentNumber
     */
    public String getDocumentNumber() {
        return (String) getAttributeInternal(DOCUMENTNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DocumentNumber
     */
    public void setDocumentNumber(String value) {
        setAttributeInternal(DOCUMENTNUMBER, value);
    }

    /**Gets the attribute value for the calculated attribute VersionNumber
     */
    public String getVersionNumber() {
        return (String) getAttributeInternal(VERSIONNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VersionNumber
     */
    public void setVersionNumber(String value) {
        setAttributeInternal(VERSIONNUMBER, value);
    }

    /**Gets the attribute value for the calculated attribute EffectiveStartDate
     */
    public Date getEffectiveStartDate() {
        return (Date) getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute EffectiveStartDate
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**Gets the attribute value for the calculated attribute EffectiveEndDate
     */
    public Date getEffectiveEndDate() {
        return (Date) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute EffectiveEndDate
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**Gets the attribute value for the calculated attribute DocumentFile
     */
    public BlobDomain getDocumentFile() {
        return (BlobDomain) getAttributeInternal(DOCUMENTFILE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DocumentFile
     */
    public void setDocumentFile(BlobDomain value) {
        setAttributeInternal(DOCUMENTFILE, value);
    }

    /**Gets the attribute value for the calculated attribute SelectFlag
     */
    public String getSelectFlag() {
        return (String) getAttributeInternal(SELECTFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SelectFlag
     */
    public void setSelectFlag(String value) {
        setAttributeInternal(SELECTFLAG, value);
    }

    /**Gets the attribute value for the calculated attribute DeleteSwitcher
     */
    public String getDeleteSwitcher() {
        return (String) getAttributeInternal(DELETESWITCHER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DeleteSwitcher
     */
    public void setDeleteSwitcher(String value) {
        setAttributeInternal(DELETESWITCHER, value);
    }

    /**Gets the attribute value for the calculated attribute CheckSwitcher
     */
    public String getCheckSwitcher() {
        return (String) getAttributeInternal(CHECKSWITCHER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CheckSwitcher
     */
    public void setCheckSwitcher(String value) {
        setAttributeInternal(CHECKSWITCHER, value);
    }

    /**Gets the attribute value for the calculated attribute Category
     */
    public String getCategory() {
        return (String) getAttributeInternal(CATEGORY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Category
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**Gets the attribute value for the calculated attribute OwningDept
     */
    public String getOwningDept() {
        return (String) getAttributeInternal(OWNINGDEPT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute OwningDept
     */
    public void setOwningDept(String value) {
        setAttributeInternal(OWNINGDEPT, value);
    }

    /**Gets the attribute value for the calculated attribute MustRead
     */
    public String getMustRead() {
        return (String) getAttributeInternal(MUSTREAD);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute MustRead
     */
    public void setMustRead(String value) {
        setAttributeInternal(MUSTREAD, value);
    }

    /**Gets the attribute value for the calculated attribute Rn
     */
    public Number getRn() {
        return (Number) getAttributeInternal(RN);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Rn
     */
    public void setRn(Number value) {
        setAttributeInternal(RN, value);
    }
}
