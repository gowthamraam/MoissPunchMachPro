package moiss.oracle.apps.moiss.doclib.server;

import moiss.oracle.apps.moiss.doclib.schema.server.MytestingImpl;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MytestingViewRowImpl extends OAViewRowImpl {
    public static final int FILEE = 0;
    public static final int ROWID = 1;

    /**This is the default constructor (do not remove)
     */
    public MytestingViewRowImpl() {
    }

    /**Gets Mytesting entity object.
     */
    public MytestingImpl getMytesting() {
        return (MytestingImpl)getEntity(0);
    }

    /**Gets the attribute value for FILEE using the alias name Filee
     */
    public BlobDomain getFilee() {
        return (BlobDomain) getAttributeInternal(FILEE);
    }

    /**Sets <code>value</code> as attribute value for FILEE using the alias name Filee
     */
    public void setFilee(BlobDomain value) {
        setAttributeInternal(FILEE, value);
    }

    /**Gets the attribute value for ROWID using the alias name RowID
     */
    public RowID getRowID() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case FILEE:
            return getFilee();
        case ROWID:
            return getRowID();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case FILEE:
            setFilee((BlobDomain)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
